# -*- Ruby -*-
#
# ****  Code generated by the R2CORBA IDL Compiler ****
# R2CORBA has been developed by:
#        Remedy IT
#        Nijkerk, GLD
#        The Netherlands
#        http://www.remedy.nl  http://www.theaceorb.nl
#

module R2CORBA

  CORBA.implement('tao/PortableServer/POAManager.pidl', {}, CORBA::IDL::CLIENT_STUB) {

  module PortableServer


    module POAManager  ## interface


      Id = 'IDL:omg.org/PortableServer/POAManager:1.0'.freeze
      Ids = [ Id ].freeze

      def POAManager._tc; @@tc_POAManager ||= CORBA::TypeCode::ObjectRef.new(Id, 'POAManager', self); end
      self._tc  # register typecode

      def POAManager._narrow(obj)
        return CORBA::Stub.create_stub(obj)._unchecked_narrow!(self)
      end

      def POAManager._duplicate(obj)
        obj
      end

      def _interface_repository_id
        self.class::Id
      end


      class AdapterInactive < CORBA::UserException

        def AdapterInactive._tc
          @@tc_AdapterInactive ||= CORBA::TypeCode::Except.new('IDL:omg.org/PortableServer/POAManager/AdapterInactive:1.0'.freeze, 'AdapterInactive', self)
        end
        self._tc  # register typecode
      end #of exception AdapterInactive
      class State < ::Fixnum
        def State._tc
          @@tc_State ||= CORBA::TypeCode::Enum.new('IDL:omg.org/PortableServer/POAManager/State:1.0'.freeze, 'State', [
              'HOLDING',
              'ACTIVE',
              'DISCARDING',
              'INACTIVE'])
        end
        self._tc  # register typecode
      end # enum State
      HOLDING = 0
      ACTIVE = 1
      DISCARDING = 2
      INACTIVE = 3

      def activate()
        raise ::CORBA::NO_IMPLEMENT.new(
                 'unimplemented operation on local interface',
                 1, ::CORBA::COMPLETED_NO)
      end #of operation activate

      def hold_requests(wait_for_completion)
        raise ::CORBA::NO_IMPLEMENT.new(
                 'unimplemented operation on local interface',
                 1, ::CORBA::COMPLETED_NO)
      end #of operation hold_requests

      def discard_requests(wait_for_completion)
        raise ::CORBA::NO_IMPLEMENT.new(
                 'unimplemented operation on local interface',
                 1, ::CORBA::COMPLETED_NO)
      end #of operation discard_requests

      def deactivate(etherealize_objects, wait_for_completion)
        raise ::CORBA::NO_IMPLEMENT.new(
                 'unimplemented operation on local interface',
                 1, ::CORBA::COMPLETED_NO)
      end #of operation deactivate

      def get_state()
        raise ::CORBA::NO_IMPLEMENT.new(
                 'unimplemented operation on local interface',
                 1, ::CORBA::COMPLETED_NO)
      end #of operation get_state

      def get_id()
        raise ::CORBA::NO_IMPLEMENT.new(
                 'unimplemented operation on local interface',
                 1, ::CORBA::COMPLETED_NO)
      end #of operation get_id
    end #of interface POAManager
  end #of module PortableServer

  } ## end of 'tao/PortableServer/POAManager.pidl'
end #of module R2CORBA

# -*- END -*-
