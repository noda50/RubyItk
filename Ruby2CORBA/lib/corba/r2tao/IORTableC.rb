# -*- Ruby -*-
#
# ****  Code generated by the R2CORBA IDL Compiler ****
# R2CORBA has been developed by:
#        Remedy IT
#        Nijkerk, GLD
#        The Netherlands
#        http://www.remedy.nl  http://www.theaceorb.nl
#

module R2CORBA

  CORBA.implement('tao/IORTable/IORTable.pidl', {}, CORBA::IDL::CLIENT_STUB) {

  module IORTable

    module Locator; end  ## interface forward

    class AlreadyBound < CORBA::UserException

      def AlreadyBound._tc
        @@tc_AlreadyBound ||= CORBA::TypeCode::Except.new('IDL:IORTable/AlreadyBound:1.0'.freeze, 'AlreadyBound', self)
      end
      self._tc  # register typecode
    end #of exception AlreadyBound

    class NotFound < CORBA::UserException

      def NotFound._tc
        @@tc_NotFound ||= CORBA::TypeCode::Except.new('IDL:IORTable/NotFound:1.0'.freeze, 'NotFound', self)
      end
      self._tc  # register typecode
    end #of exception NotFound

    module Table  ## interface


      Id = 'IDL:IORTable/Table:1.0'.freeze
      Ids = [ Id ].freeze

      def Table._tc; @@tc_Table ||= CORBA::TypeCode::ObjectRef.new(Id, 'Table', self); end
      self._tc  # register typecode

      def Table._narrow(obj)
        return CORBA::Stub.create_stub(obj)._unchecked_narrow!(self)
      end

      def Table._duplicate(obj)
        obj
      end

      def _interface_repository_id
        self.class::Id
      end


      def bind(object_key, iOR)
        raise ::CORBA::NO_IMPLEMENT.new(
                 'unimplemented operation on local interface',
                 1, ::CORBA::COMPLETED_NO)
      end #of operation bind

      def rebind(object_key, iOR)
        raise ::CORBA::NO_IMPLEMENT.new(
                 'unimplemented operation on local interface',
                 1, ::CORBA::COMPLETED_NO)
      end #of operation rebind

      def unbind(object_key)
        raise ::CORBA::NO_IMPLEMENT.new(
                 'unimplemented operation on local interface',
                 1, ::CORBA::COMPLETED_NO)
      end #of operation unbind

      def set_locator(the_locator)
        raise ::CORBA::NO_IMPLEMENT.new(
                 'unimplemented operation on local interface',
                 1, ::CORBA::COMPLETED_NO)
      end #of operation set_locator
    end #of interface Table

    module Locator  ## interface


      Id = 'IDL:IORTable/Locator:1.0'.freeze
      Ids = [ Id ].freeze

      def Locator._tc; @@tc_Locator ||= CORBA::TypeCode::ObjectRef.new(Id, 'Locator', self); end
      self._tc  # register typecode

      def Locator._narrow(obj)
        return CORBA::Stub.create_stub(obj)._unchecked_narrow!(self)
      end

      def Locator._duplicate(obj)
        obj
      end

      def _interface_repository_id
        self.class::Id
      end


      def locate(object_key)
        raise ::CORBA::NO_IMPLEMENT.new(
                 'unimplemented operation on local interface',
                 1, ::CORBA::COMPLETED_NO)
      end #of operation locate
    end #of interface Locator
  end #of module IORTable

  } ## end of 'tao/IORTable/IORTable.pidl'
end #of module R2CORBA

# -*- END -*-
